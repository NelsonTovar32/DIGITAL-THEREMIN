
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0x630
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208       0xe8 main.o
                0x0000000000000208                main
 .text          0x00000000000002f0      0x340 soc-hw.o
                0x00000000000002f0                isr_null
                0x00000000000002f4                tic_isr
                0x0000000000000320                irq_handler
                0x0000000000000384                isr_init
                0x00000000000003a8                isr_register
                0x00000000000003c0                isr_unregister
                0x00000000000003e0                gpio_init
                0x00000000000003f4                gpio_read
                0x0000000000000408                gpio_write
                0x000000000000041c                set_pin
                0x0000000000000464                pin_inv
                0x00000000000004a8                counter
                0x00000000000004d8                msleep
                0x0000000000000514                nsleep
                0x0000000000000544                tic_init
                0x0000000000000588                uart_init
                0x000000000000058c                uart_getchar
                0x00000000000005b0                uart_putchar
                0x00000000000005d4                uart_putstr
                0x0000000000000608                trigger_set
                0x000000000000061c                set_digpot
                0x0000000000000630                _etext = .

.rodata         0x0000000000000630        0x8
                0x0000000000000630                . = ALIGN (0x4)
                0x0000000000000630                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x0000000000000630        0x8 soc-hw.o
 *(.rodata1)
                0x0000000000000638                _erodata = .

.data           0x0000000000000638       0x14
                0x0000000000000638                . = ALIGN (0x4)
                0x0000000000000638                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000638        0x0 crt0ram.o
 .data          0x0000000000000638        0x0 main.o
 .data          0x0000000000000638       0x14 soc-hw.o
                0x0000000000000638                uart0
                0x000000000000063c                timer0
                0x0000000000000640                gpio0
                0x0000000000000644                digpot0
                0x0000000000000648                trigger0
 *(.data1)
                0x0000000000000650                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x000000000000064c                _edata = .

.bss            0x000000000000064c       0x84
                0x000000000000064c                . = ALIGN (0x4)
                0x000000000000064c                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x000000000000064c        0x0 crt0ram.o
 .bss           0x000000000000064c        0x0 main.o
 .bss           0x000000000000064c        0x0 soc-hw.o
 *(COMMON)
 COMMON         0x000000000000064c       0x84 soc-hw.o
                0x000000000000064c                isr_table
                0x00000000000006cc                tic_msec
                0x00000000000006d0                _ebss = .
                0x00000000000006d0                _end = .
                0x0000000000000ffc                PROVIDE (_fstack, ((ORIGIN (ram) + 0x1000) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x0000000000000000      0x2b1
 .debug_abbrev  0x0000000000000000       0xc5 main.o
 .debug_abbrev  0x00000000000000c5      0x1ec soc-hw.o

.debug_info     0x0000000000000000      0x7de
 .debug_info    0x0000000000000000      0x173 main.o
 .debug_info    0x0000000000000173      0x66b soc-hw.o

.debug_line     0x0000000000000000      0x4d7
 .debug_line    0x0000000000000000      0x142 main.o
 .debug_line    0x0000000000000142      0x395 soc-hw.o

.debug_frame    0x0000000000000000      0x180
 .debug_frame   0x0000000000000000       0x20 main.o
 .debug_frame   0x0000000000000020      0x160 soc-hw.o

.debug_loc      0x0000000000000000      0x1e7
 .debug_loc     0x0000000000000000       0x34 main.o
 .debug_loc     0x0000000000000034      0x1b3 soc-hw.o

.debug_pubnames
                0x0000000000000000      0x1ab
 .debug_pubnames
                0x0000000000000000       0x1b main.o
 .debug_pubnames
                0x000000000000001b      0x190 soc-hw.o

.debug_pubtypes
                0x0000000000000000       0xb9
 .debug_pubtypes
                0x0000000000000000       0x43 main.o
 .debug_pubtypes
                0x0000000000000043       0x76 soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_str      0x0000000000000000      0x22c
 .debug_str     0x0000000000000000       0x92 main.o
                                         0xa9 (size before relaxing)
 .debug_str     0x0000000000000092      0x19a soc-hw.o
                                        0x232 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 soc-hw.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 soc-hw.o
