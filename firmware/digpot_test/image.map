
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0x520
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208       0x4c main.o
                0x0000000000000208                main
 .text          0x0000000000000254      0x2cc soc-hw.o
                0x0000000000000254                isr_null
                0x0000000000000258                tic_isr
                0x0000000000000284                irq_handler
                0x00000000000002e8                isr_init
                0x000000000000030c                isr_register
                0x0000000000000324                isr_unregister
                0x0000000000000344                gpio_init
                0x0000000000000358                gpio_read
                0x000000000000036c                gpio_write
                0x0000000000000380                set_pin
                0x00000000000003c8                pin_inv
                0x000000000000040c                msleep
                0x0000000000000448                nsleep
                0x0000000000000478                tic_init
                0x00000000000004bc                trigger_set0
                0x00000000000004d0                read_count0
                0x00000000000004e4                trigger_set1
                0x00000000000004f8                read_count1
                0x000000000000050c                set_digpot
                0x0000000000000520                _etext = .

.rodata         0x0000000000000520        0x4
                0x0000000000000520                . = ALIGN (0x4)
                0x0000000000000520                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x0000000000000520        0x4 soc-hw.o
 *(.rodata1)
                0x0000000000000524                _erodata = .

.data           0x0000000000000524       0x14
                0x0000000000000524                . = ALIGN (0x4)
                0x0000000000000524                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000524        0x0 crt0ram.o
 .data          0x0000000000000524        0x0 main.o
 .data          0x0000000000000524       0x14 soc-hw.o
                0x0000000000000524                timer0
                0x0000000000000528                gpio0
                0x000000000000052c                digpot0
                0x0000000000000530                trigger0
                0x0000000000000534                trigger1
 *(.data1)
                0x0000000000000540                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000000000538                _edata = .

.bss            0x0000000000000538       0x84
                0x0000000000000538                . = ALIGN (0x4)
                0x0000000000000538                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000538        0x0 crt0ram.o
 .bss           0x0000000000000538        0x0 main.o
 .bss           0x0000000000000538        0x0 soc-hw.o
 *(COMMON)
 COMMON         0x0000000000000538       0x84 soc-hw.o
                0x0000000000000538                isr_table
                0x00000000000005b8                tic_msec
                0x00000000000005bc                _ebss = .
                0x00000000000005bc                _end = .
                0x0000000000000ffc                PROVIDE (_fstack, ((ORIGIN (ram) + 0x1000) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x0000000000000000      0x221
 .debug_abbrev  0x0000000000000000       0x68 main.o
 .debug_abbrev  0x0000000000000068      0x1b9 soc-hw.o

.debug_info     0x0000000000000000      0x685
 .debug_info    0x0000000000000000       0xa1 main.o
 .debug_info    0x00000000000000a1      0x5e4 soc-hw.o

.debug_line     0x0000000000000000      0x38f
 .debug_line    0x0000000000000000       0x72 main.o
 .debug_line    0x0000000000000072      0x31d soc-hw.o

.debug_frame    0x0000000000000000      0x160
 .debug_frame   0x0000000000000000       0x20 main.o
 .debug_frame   0x0000000000000020      0x140 soc-hw.o

.debug_loc      0x0000000000000000      0x196
 .debug_loc     0x0000000000000000       0x14 main.o
 .debug_loc     0x0000000000000014      0x182 soc-hw.o

.debug_pubnames
                0x0000000000000000      0x194
 .debug_pubnames
                0x0000000000000000       0x1b main.o
 .debug_pubnames
                0x000000000000001b      0x179 soc-hw.o

.debug_pubtypes
                0x0000000000000000       0x99
 .debug_pubtypes
                0x0000000000000000       0x1e main.o
 .debug_pubtypes
                0x000000000000001e       0x7b soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_str      0x0000000000000000      0x214
 .debug_str     0x0000000000000000       0x71 main.o
                                         0x7d (size before relaxing)
 .debug_str     0x0000000000000071      0x1a3 soc-hw.o
                                        0x224 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 soc-hw.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 soc-hw.o
